version: 0.2
env:
  parameter-store:
    DB_USER: "/CodeBuild/DB_USER"
    DB_PASSWARD: "/CodeBuild/DB_PASSWORD"
    DB_HOST: "/CodeBuild/DB_HOST"
    DB_SCHEMA: "/CodeBuild/DB_SCHEMA"
phases:
  pre_build:
    commands:
      - echo pre_build started on `date`
      - echo Logging in to Amazon ECR...
      - IMAGE_URI_NODE=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME_NODE
      - IMAGE_TAG=`cat docker-compose.prod.yml |grep 'image:' |awk -F':' '{print $3}'`
      - echo $IMAGE_TAG
      - sed -i "s|ECR_URI|$IMAGE_URI_NODE|g" docker-compose.prod.yml
      - cat docker-compose.prod.yml
      - sed -i "s|DB_USER|$DB_USER|g" src/production.env
      - sed -i "s|DB_PASSWORD|$DB_PASSWORD|g" src/production.env
      - sed -i "s|DB_HOST|$DB_HOST|g" src/production.env
      - sed -i "s|DB_SCHEMA|$DB_SCHEMA|g" src/production.env
      - mv src/production.env src/.env
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - docker-compose -f docker-compose.yml -f docker-compose.prod.yml build
  post_build:
    commands:
      - docker push $IMAGE_URI_NODE:$IMAGE_TAG
      - echo '[{"name":"nnode","imageUri":"__URI_NODE__"}]' > imagedef.json
      - sed -ie "s@__URI_NODE__@${IMAGE_URI_NODE}:${IMAGE_TAG}@" imagedef.json
artifacts:
  files:
    - imagedef.json
    - appspec.yml
    - docker-compose.yml
    - docker-compose.prod.yml
    - scripts/update_docker_image.sh
    - scripts/start_docker_container.sh
    - scripts/stop_docker_container.sh
